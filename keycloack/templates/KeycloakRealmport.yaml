apiVersion: k8s.keycloak.org/v2alpha1
kind: KeycloakRealmImport
metadata:
  name: example-keycloak-realm-import
  namespace: keycloak
spec:
  keycloakCRName: example-keycloak
  realm:
    id: my-realm
    realm: my-realm
    enabled: true

    # Configuración de conexión a LDAP
    userFederationProviders:
      - displayName: "ldap-provider"
        providerName: ldap
        priority: 0
        config:
          enabled: "true"
          importEnabled: "true"
          syncRegistrations: "true"
          vendor: "other"                           # o "ad" si es Active Directory
          connectionUrl: 'ldap://ldap.kubedevops:389'
          usersDn: 'ou=users,dc=ldap,dc=kubedevops,dc=com'
          bindCredential: mondariz10
          rdnLDAPAttribute: "uid"
          uuidLDAPAttribute: "entryUUID"
          userObjectClasses: "inetOrgPerson, organizationalPerson"
          searchScope: "1"

    # Mapper de grupos LDAP → Keycloak
    userFederationMappers:
      - name: "groups"
        federationProviderDisplayName: "ldap-provider"
        federationMapperType: group-ldap-mapper
        config:
          mode: "READ_ONLY"
          membershipLdapAttribute: "memberOf"
          membershipAttributeType: "DN"
          membershipUserLdapAttribute: "uid"
          groupsDn: 'ou=Groups,dc=ldap,dc=kubedevops,dc=com'
          groupNameLdapAttribute: "cn"
          preserveGroupInheritance: "true"
          ignoreMissingGroups: "true"
          dropNonExistingGroupsDuringSync: "true"

    # Cliente OIDC para ArgoCD
    clients:
      - clientId: argocd
        enabled: true
        protocol: openid-connect
        publicClient: false
        secret: supersecret-argocd-client
        redirectUris:
          - "https://argocd.example.com/auth/callback"
        standardFlowEnabled: true
        directAccessGrantsEnabled: true
        implicitFlowEnabled: false
        serviceAccountsEnabled: true
        defaultClientScopes:
          - email
          - profile
          - roles
          - groups
